5.11 (Localize o menor valor) Escreva um aplicativo que localiza o menor de vários números inteiros.
Suponha que o primeiro valor lido especifica o número de valores a serem inseridos pelo usuário.

5.12 (Calculando o produto de números inteiros ímpares) Escreva um aplicativo que calcula o produto dos números inteiros ímpares de 1 a 15.

5.13 (Fatoriais) Fatoriais costumam ser utilizados em problemas de probabilidade.
O fatorial de um inteiro positivo n (escrito como n! e pronunciado como “fatorial de n”) é igual ao produto dos números inteiros positivos de 1 a n.
Escreva um aplicativo que calcula os fatoriais de 1 a 20. Utilize o tipo long. Exiba os resultados em formato tabular.
Que dificuldade poderia impedir você de calcular o fatorial de 100?

5.14 (Programa de juros compostos modificado) Modifique o aplicativo de juros compostos da Figura 5.6
para repetir os passos para taxas de juros de 5%, 6%, 7%, 8%, 9% e 10%.
Utilize um loop for para variar a taxa de juros.

5.15 (Programa para impressão de triângulos) Escreva um aplicativo que exibe os seguintes padrões separadamente, um embaixo do outro.
Utilize loops for para gerar os padrões.
Todos os asteriscos (*) devem ser impressos por uma única instrução na forma System.out. print('*');
o que faz com que os asteriscos sejam impressos lado a lado. Uma instrução na forma System.out.println();
pode ser utilizada para mover-se para a próxima linha. Uma instrução na forma System.out.print(' ');
pode ser utilizada para exibir um espaço para os últimos dois padrões. Não deve haver outras instruções de saída no programa.
[Dica: os dois últimos padrões requerem que cada linha inicie com um número adequado de espaços em branco.]

5.16 (Gráfico de barras do programa de impressão) Uma aplicação interessante dos computadores é exibir diagramas e gráficos de barras.
Escreva um aplicativo que leia cinco números entre 1 e 30.
Para cada número que é lido, seu programa deve exibir o mesmo número de asteriscos adjacentes.
Por exemplo, se seu programa lê o número 7, ele deve exibir *******.
Exiba as barras dos asteriscos depois de ler os cinco números.

5.17 (Calculando vendas) Um varejista on-line vende cinco produtos cujos preços no varejo são como a seguir: produto 1, US$ 2,98;
produto 2, US$ 4,50; produto 3, US$ 9,98; produto 4, US$ 4,49 e produto 5, US$ 6,87.
Escreva um aplicativo que leia uma série de pares de números como segue:
 a) número de produto
 b) quantidade vendida
 Seu programa deve utilizar uma instrução switch para determinar o preço de varejo de cada produto.
 Você deve calcular e exibir o valor de varejo total de todos os produtos vendidos.
 Utilize um loop controlado por sentinela para determinar quando o programa deve parar o loop e exibir os resultados finais.

5.18 (Programa de juros compostos modificado) Modifique o aplicativo na Figura 5.6 para utilizar apenas inteiros para calcular os juros compostos.
[Dica: trate todas as quantidades monetárias como números inteiros em centavos.
Então, divida o resultado em suas partes dólar e centavos utilizando as operações divisão e resto, respectivamente.
Insira uma vírgula entre as partes dólar e centavos.]

5.21 (Triplos de Pitágoras) Um triângulo retângulo pode ter lados cujos comprimentos são todos inteiros.
O conjunto de três valores inteiros para os comprimentos dos lados de um triângulo retângulo é chamado de triplo de Pitágoras.
Os comprimentos dos três lados devem satisfazer a relação de que a soma dos quadrados de dois dos lados é igual ao quadrado da hipotenusa.
Escreva um aplicativo para exibir uma tabela dos triplos de Pitágoras para side1, side2 e hypotenuse, todos não maiores que 500.
Utilize um loop for triplamente aninhado que tenta todas as possibilidades. Esse é um método de computação de “força bruta”.
Você aprenderá nos cursos de ciência da computação mais avançados que para muitos problemas interessantes
não há uma abordagem algorítmica conhecida além do uso de força bruta absoluta.

5.22 (Programa de impressão de triângulos modificado) Modifique a Questão 5.15
para combinar seu código dos quatro triângulos de asteriscos separados,
de modo que todos os quatro padrões sejam impressos lado a lado.
[Dica: faça uso inteligente de loops for aninhados.]

5.23 (Leis de De Morgan) Neste capítulo, discutimos os operadores lógicos &&, &, ||, |, ^ e !.
As leis de De Morgan às vezes podem tornar mais convenientes para expressar uma expressão lógica.
Essas leis afirmam que a expressão !(condição1 && condição2) é logicamente equivalente à expressão(!condição1 || !condição2).
Além disso, a expressão !(condição1|| condição2) é logicamente equivalente à expressão (!condição1&& !condição2).
Utilize as leis de De Morgan para escrever expressões equivalentes para cada uma das expressões a seguir,
então escreva um aplicativo para mostrar que tanto a expressão original
como a nova expressão em cada caso produzem o mesmo valor:
 a) !(x < 5) && !(y >= 7)
 b) !(a == b) || !(g != 5)
 c) !((x <= 8) && (y > 4))
 d) !((i > 4) || (j <= 6))

5.24 (Programa de impressão de losangos) Escreva um aplicativo que imprime a seguinte forma de um losango.
Você pode utilizar instruções de saída que imprimem um único asterisco (*),
um único espaço ou um único caractere de nova linha.
Maximize sua utilização de repetição (com instruções for aninhadas) e minimize o número de instruções de saída.

     *
    ***
   *****
  *******
 *********
  *******
   *****
    ***
     *

5.25 (Programa de impressão de losangos modificado) Modifique o aplicativo que você escreveu na Questão
5.24 para ler um número ímpar no intervalo 1 a 19 para especificar o número de linhas no losango.
Seu programa então deve exibir um losango do tamanho apropriado.

5.30 (Classe AutoPolicy modificada) Modifique a classe AutoPolicy na Figura 5.11 para
validar os códigos de estado de duas letras para os estados do nordeste dos EUA.
Os códigos são: CT para Connecticut,
MA para Massachusetts,
ME para Maine,
NH para New Hampshire,
NJ para New Jersey,
NY para Nova York,
PA para Pensilvânia e
VT para Vermont.
No método AutoPolicy setState use o operador lógico OU (||) (Seção 5.9)
para criar uma condição composta em uma instrução if...else que compara o
argumento do método com cada código de duas letras. Se o código estiver incorreto,
a parte else da instrução if...else deve exibir uma mensagem de erro.
Nos próximos capítulos,
você aprenderá a usar o tratamento de exceções para indicar que um método recebeu um valor inválido.

Fazendo a diferença

5.31 (Perguntas sobre fatos do aquecimento global)
A controversa questão do aquecimento global foi amplamente divulgada no filme “Uma verdade inconveniente,”
apresentando o ex-vice-presidente Al Gore.
Gore e uma rede de cientistas da ONU, o Grupo Intergovernamental sobre Alterações Climáticas,
dividiu o Prêmio Nobel da Paz de 2007 em reconhecimento aos “seus esforços para fomentar e
disseminar melhor conhecimento sobre as mudanças climáticas feitas pelo homem”.
Pesquise on-line os dois lados da questão em relação ao aquecimento global
(é recomendável pesquisar frases como “global warming skeptics” [“céticos do aquecimento global”]).
Crie um questionário de múltipla escolha com cinco perguntas sobre o aquecimento global, cada uma tendo quatro possíveis respostas
(numeradas 1 a 4). Seja objetivo e tente representar de uma maneira justa ambos os lados da questão.
Em seguida, escreva um aplicativo que administre o questionário, calcule o número de respostas corretas (zero a cinco) e retorne uma mensagem ao usuário.
Se o usuário responder corretamente cinco perguntas, imprima “Excelente”;
se responder quatro, imprima “Muito bom”;
se responder três ou menos, imprima “É o momento de aprimorar seu conhecimento sobre o aquecimento global”
e inclua uma lista de alguns sites onde você encontrou os fatos.



